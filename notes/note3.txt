object oriented programming system (Oops)
---------------------------------------

its a programing paradigm which consider real time entities into objects and class.

basic 
-----
class - Blueprint which contains common features from which different objects can be created 
object - its a real time entity created from class
reference - The memory location in which properties and methods are stored.

proprties - variables inside a class 
methods - functions inside a class
instance variable 

syntax
------

class classname{
    1,properties 
    2,constructors - used to initialize properties ,self invoke when object is created
    3,methods
}

syntax 
------
const objectname = new classname() //instance or object is created 

it is not mandatory to place properties ,methods and constructors together in every class 

this - instance variable 

pillars of oops 
--------------
1,Inheritance
 - Used to access properties and methods from one class to another
 - Parent class/super class/base class
 - Child class/sub class/derived class
 - keyword - extends 
 - Types - simple,multilevel,


 object Inheritance 
 ------------------
 keyword = __proto__

2,Polymorphism - ability to attain in more than one format
               - method overloading - methods with same name but different arguments - executes based on the argument
                                    - js does not support directly
                                    - rest operator(...) - arguments are returned as an array 
               - method overriding  - method with same name with same argument - then last written method will execute
3,Abstraction
4,Encapsulation  

Exception Handling
------------------
- exception  - Run time errors
- exceptions are handles with the help of try-catch block
- Prevents program crashes due to unexpected errors.

syntax
------
try{
    statemnt that might cause errorrs
}
catch{
    statemnt to execute in case of errors 
}

finally{
    statemnt that need to be executed in both cases 
}

eval() - used to solve expression 

